[{"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/index.js":"1","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/App.js":"2","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Signup.js":"3","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Dashboard.js":"4","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/ForgotPassword.js":"5","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/PrivateRoute.js":"6","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Login.js":"7","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/store.js":"8","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/API.js":"9","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Landing.js":"10","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/useAuth.js":"11","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/ErrorMessage.js":"12","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/HeaderBar.js":"13","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/AccountCard.js":"14","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/UpdateAccount.js":"15","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/crypto.js":"16","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Generate.js":"17","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/AddAccount.js":"18","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/ModifyAcct.js":"19","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/DeleteAcct.js":"20"},{"size":355,"mtime":1635299086410,"results":"21","hashOfConfig":"22"},{"size":1401,"mtime":1635299086408,"results":"23","hashOfConfig":"22"},{"size":7746,"mtime":1635299086412,"results":"24","hashOfConfig":"22"},{"size":1179,"mtime":1635299086411,"results":"25","hashOfConfig":"22"},{"size":1955,"mtime":1635299086412,"results":"26","hashOfConfig":"22"},{"size":458,"mtime":1635302314689,"results":"27","hashOfConfig":"22"},{"size":4681,"mtime":1635299086412,"results":"28","hashOfConfig":"22"},{"size":171,"mtime":1635299086411,"results":"29","hashOfConfig":"22"},{"size":960,"mtime":1635299086410,"results":"30","hashOfConfig":"22"},{"size":1838,"mtime":1635299086412,"results":"31","hashOfConfig":"22"},{"size":1174,"mtime":1635299086411,"results":"32","hashOfConfig":"22"},{"size":202,"mtime":1635299086409,"results":"33","hashOfConfig":"22"},{"size":2798,"mtime":1635299086409,"results":"34","hashOfConfig":"22"},{"size":6677,"mtime":1635299086408,"results":"35","hashOfConfig":"22"},{"size":1674,"mtime":1635299086410,"results":"36","hashOfConfig":"22"},{"size":431,"mtime":1617386930108,"results":"37","hashOfConfig":"22"},{"size":6761,"mtime":1635299086412,"results":"38","hashOfConfig":"22"},{"size":5186,"mtime":1635299086411,"results":"39","hashOfConfig":"22"},{"size":4031,"mtime":1635299086409,"results":"40","hashOfConfig":"22"},{"size":2000,"mtime":1635299086409,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"5y7vh8",{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/index.js",[],["88","89"],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/App.js",["90","91","92","93"],"import { useState, useLayoutEffect } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport Signup from \"./views/Signup\";\nimport { Container } from \"react-bootstrap\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport PrivateRoute from \"./utils/PrivateRoute\";\nimport useStore from \"./utils/store\";\nimport API from \"./utils/API\";\n\nimport Dashboard from \"./views/Dashboard\";\nimport Login from \"./views/Login\";\nimport ForgotPassword from \"./views/ForgotPassword\";\nimport Landing from \"./views/Landing\";\n\nfunction App() {\n  const currentUser = useStore(state => state.currentUser);\n  const { setCurrentUser } = useStore();\n\n  useLayoutEffect(() => {\n    if (!currentUser) checkSession();\n  }, []);\n\n  const checkSession = async () => {\n    let result = await API.getCurrentSession();\n    if (result.data.success) {\n      setCurrentUser(result.data.response);\n    }\n  };\n\n  return (\n    <ChakraProvider>\n      <Switch>\n        <PrivateRoute path=\"/home\" component={Dashboard} />\n\n        <Route exact path=\"/\" component={Landing} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/forgotpassword\" component={ForgotPassword} />\n\n        <Route render={() => <Redirect to={{ pathname: \"/\" }} />} />\n      </Switch>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Signup.js",["94","95"],"import { useState } from \"react\";\nimport useAuth from \"../utils/useAuth\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Box,\n  Input,\n  Heading,\n  Center,\n  Stack,\n  Text,\n  InputGroup,\n  InputRightElement,\n  IconButton,\n  Alert,\n  AlertIcon,\n  Link as ReachLink,\n  Button\n} from \"@chakra-ui/react\";\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\nimport ErrorMessage from \"../components/ErrorMessage\";\n\nexport default function Signup() {\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    phoneNum: \"\",\n    funName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPass: \"\"\n  };\n\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [show, setShow] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const history = useHistory();\n\n  const { signUp } = useAuth();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setFormValues({\n      ...formValues,\n      [name]: value\n    });\n  };\n\n  const validateFields = values => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n    let errors = {};\n\n    if (!values.firstName) errors.firstName = \"Must enter a first name\";\n    if (!values.lastName) errors.lastName = \"Must enter a last name\";\n\n    if (!values.email) errors.email = \"Must enter an email\";\n    else if (!emailRegex.test(values.email))\n      errors.email = \"Email is not valid\";\n\n    if (!values.password) errors.password = \"Must enter a password\";\n    else if (values.password.length < 8)\n      errors.password = \"Password must be at least 8 characters\";\n    else if (values.password.length > 15)\n      errors.password = \"Password must not exceed 15 characters\";\n\n    if (!values.confirmPass) errors.confirmPass = \"Must confirm password\";\n    else if (values.password !== values.confirmPass)\n      errors.confirmPass = \"Passwords do not match\";\n\n    return errors;\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    setFormErrors(validateFields(formValues));\n\n    if (!Object.keys(formErrors).length) {\n      let result = await signUp(formValues);\n\n      if (result.data.success) {\n        history.push(\"/\");\n      } else setError(result.data.message);\n    } else setError(\"Failed to Create User.\");\n  };\n\n  return (\n    <div\n      className=\"d-flex align-items-center justify-content-center css-selector\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Center>\n        <Stack>\n          <Box\n            borderWidth=\"2px\"\n            borderColor=\"gray.500\"\n            bg=\"white\"\n            borderRadius=\"7px\"\n            w=\"500px\"\n            minheight=\"360px\"\n            mt=\"3em\"\n            mb=\".5em\"\n            p=\"1.5em\"\n          >\n            <Center>\n              <Heading>Sign Up</Heading>\n            </Center>\n\n            <Stack spacing={3} mt=\"1em\">\n              <InputGroup>\n                <Text htmlFor=\"firstName\" mr=\"1em\">\n                  First Name\n                </Text>\n                <Input\n                  placeholder=\"Enter Here\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  value={formValues.firstName}\n                  onChange={handleChange}\n                  errorBorderColor=\"crimson\"\n                  isInvalid={formErrors.firstName}\n                />\n              </InputGroup>\n\n              {formErrors.firstName ? (\n                <ErrorMessage children={formErrors.firstName} />\n              ) : null}\n\n              <InputGroup>\n                <Text htmlFor=\"lastName\" mr=\"1em\">\n                  Last Name\n                </Text>\n                <Input\n                  placeholder=\"Enter Here\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  value={formValues.lastName}\n                  onChange={handleChange}\n                  errorBorderColor=\"crimson\"\n                  isInvalid={formErrors.lastName}\n                />\n              </InputGroup>\n\n              {formErrors.lastName ? (\n                <ErrorMessage children={formErrors.lastName} />\n              ) : null}\n\n              <InputGroup>\n                <Text htmlFor=\"email\" mr=\"2em\">\n                  Email\n                </Text>\n                <Input\n                  placeholder=\"Enter Here\"\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formValues.email}\n                  onChange={handleChange}\n                  errorBorderColor=\"crimson\"\n                  isInvalid={formErrors.email}\n                />\n              </InputGroup>\n\n              {formErrors.email ? (\n                <ErrorMessage children={formErrors.email} />\n              ) : null}\n\n              <InputGroup>\n                <Text htmlFor=\"password\" mr=\"1em\">\n                  Password\n                </Text>\n                <Input\n                  placeholder=\"Enter Here\"\n                  type={show ? \"text\" : \"password\"}\n                  id=\"password\"\n                  name=\"password\"\n                  value={formValues.password}\n                  onChange={handleChange}\n                  errorBorderColor=\"crimson\"\n                  isInvalid={formErrors.password}\n                />\n                <InputRightElement\n                  children={\n                    <IconButton\n                      icon={show ? <AiFillEyeInvisible /> : <AiFillEye />}\n                      onClick={() => setShow(!show)}\n                      variant=\"ghost\"\n                    />\n                  }\n                />\n              </InputGroup>\n\n              {formErrors.password ? (\n                <ErrorMessage children={formErrors.password} />\n              ) : null}\n\n              <InputGroup>\n                <Text htmlFor=\"confirmPass\" mr=\"1em\">\n                  Confirm Password\n                </Text>\n                <Input\n                  placeholder=\"Enter Here\"\n                  type={showConfirm ? \"text\" : \"password\"}\n                  id=\"confirmPass\"\n                  name=\"confirmPass\"\n                  value={formValues.confirmPass}\n                  onChange={handleChange}\n                  errorBorderColor=\"crimson\"\n                  isInvalid={formErrors.confirmPass}\n                />\n                <InputRightElement\n                  children={\n                    <IconButton\n                      icon={\n                        showConfirm ? <AiFillEyeInvisible /> : <AiFillEye />\n                      }\n                      onClick={() => setShowConfirm(!showConfirm)}\n                      variant=\"ghost\"\n                    />\n                  }\n                />\n              </InputGroup>\n\n              {formErrors.confirmPass ? (\n                <ErrorMessage children={formErrors.confirmPass} />\n              ) : null}\n\n              {error && (\n                <Alert status=\"error\">\n                  <AlertIcon />\n                  {error}\n                </Alert>\n              )}\n            </Stack>\n\n            <Button\n              onClick={handleFormSubmit}\n              mt=\"1em\"\n              bg=\"yellow.400\"\n              color=\"white\"\n              _hover={{ bg: \"yellow.500\" }}\n              style={{ float: \"right\" }}\n            >\n              Submit\n            </Button>\n          </Box>\n          <Center>\n            <Text color=\"gray.600\">\n              Already have an account?{\" \"}\n              <ReachLink as={Link} to=\"/login\" color=\"yellow.400\">\n                Login\n              </ReachLink>\n            </Text>\n          </Center>\n        </Stack>\n      </Center>\n    </div>\n  );\n}\n","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Dashboard.js",["96"],"import { useState, useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Heading, Center } from \"@chakra-ui/react\";\nimport HeaderBar from \"../components/HeaderBar\";\nimport AccountCard from \"../components/AccountCard\";\nimport API from \"../utils/API\";\nimport useStore from \"../utils/store\";\n\nexport default function Dashboard() {\n  const [accounts, setAccounts] = useState([]);\n  const [updateData, setUpdateData] = useState(false);\n  const { currentUser } = useStore();\n\n  useEffect(() => {\n    getAccounts();\n  }, [updateData]);\n\n  async function getAccounts() {\n    let result = await API.getAccts(currentUser.id);\n    setAccounts(result.data.response);\n  }\n\n  // TODO: when they are no accounts, add a \"click here to get started\" button\n\n  return (\n    <>\n      <HeaderBar update={() => setUpdateData(!updateData)} />\n      <Container>\n        <Center>\n          <Heading mt=\"1em\">Dashboard</Heading>\n        </Center>\n        {accounts.map(item => {\n          return (\n            <AccountCard\n              data={item}\n              update={() => setUpdateData(!updateData)}\n            />\n          );\n        })}\n      </Container>\n    </>\n  );\n}\n","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/ForgotPassword.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/PrivateRoute.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Login.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/store.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/API.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Landing.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/useAuth.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/ErrorMessage.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/HeaderBar.js",["97"],"import React, { useState } from \"react\";\nimport {\n  Box,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem\n} from \"@chakra-ui/react\";\nimport useAuth from \"../utils/useAuth\";\nimport AddAccount from \"../views/AddAccount\";\nimport Generate from \"../views/Generate\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { FcLock } from \"react-icons/fc\";\nimport { FiPlus } from \"react-icons/fi\";\nimport { MdAutorenew } from \"react-icons/md\";\n\nimport useStore from \"../utils/store\";\n\nexport default function HeaderBar({ update }) {\n  const [error, setError] = useState(\"\");\n  const [openAcct, setOpenAcct] = useState(false);\n  const [openGenerate, setOpenGenerate] = useState(false);\n\n  const history = useHistory();\n  const { logOut } = useAuth();\n  const currentUser = useStore(state => state.currentUser);\n\n  async function handleLogOut() {\n    setError(\"\");\n    try {\n      await logOut(currentUser.id);\n      history.push(\"/login\");\n    } catch {\n      setError(\"Failed to Logout\");\n    }\n  }\n\n  return (\n    <>\n      <Box pt={5} pb={0} bg=\"gray.800\">\n        <ul style={{ display: \"flex\", listStyleType: \"none\" }}>\n          <IconButton\n            as={Link}\n            variant=\"link\"\n            size=\"lg\"\n            to=\"/home\"\n            icon={<FcLock />}\n          />\n          <div style={{ marginLeft: \"auto\", marginRight: \".5em\" }}>\n            <IconButton\n              aria-label=\"Add Account\"\n              onClick={() => setOpenAcct(true)}\n              variant=\"ghost\"\n              isRound={true}\n              color=\"whitesmoke\"\n              _hover={{ backgroundColor: \"gray.700\" }}\n              icon={<FiPlus />}\n            />\n            <IconButton\n              aria-label=\"Generate\"\n              onClick={() => setOpenGenerate(true)}\n              mr=\".7em\"\n              variant=\"ghost\"\n              isRound={true}\n              color=\"whitesmoke\"\n              _hover={{ backgroundColor: \"gray.700\" }}\n              icon={<MdAutorenew />}\n            />\n            <Menu style={{ float: \"right\" }}>\n              <MenuButton\n                style={{ color: \"whitesmoke\", padding: \".6em\" }}\n                _hover={{ backgroundColor: \"gray.700\" }}\n              >\n                Welcome, {currentUser?.first_name}\n              </MenuButton>\n              <MenuList>\n                {/*  <MenuItem>Profile</MenuItem> */}\n                <MenuItem onClick={handleLogOut}>Log Out</MenuItem>\n              </MenuList>\n            </Menu>\n          </div>\n        </ul>\n        <Box mt={2} w=\"100%\" h=\"6px\" bg=\"yellow.400\"></Box>\n      </Box>\n      <AddAccount\n        open={openAcct}\n        onClose={() => setOpenAcct(false)}\n        updateData={update}\n      />\n      <Generate open={openGenerate} onClose={() => setOpenGenerate(false)} />\n    </>\n  );\n}\n","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/AccountCard.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/UpdateAccount.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/crypto.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Generate.js",["98"],"import { useState, useRef } from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  ModalFooter,\n  InputGroup,\n  InputLeftElement,\n  IconButton,\n  Text,\n  Input,\n  Button,\n  Alert,\n  AlertIcon,\n  Stack,\n  Checkbox,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb\n} from \"@chakra-ui/react\";\nimport { FaClipboard } from \"react-icons/fa\";\n\nexport default function Generate({ open, onClose }) {\n  const [show, setShow] = useState(false);\n  const [range, setRange] = useState(10);\n  const [password, setPassword] = useState(\"\");\n\n  const [uppercase, setUppercase] = useState(false);\n  const [lowercase, setLowercase] = useState(true);\n  const [numbers, setNumbers] = useState(false);\n  const [symbols, setSymbols] = useState(false);\n\n  const [error, setError] = useState(\"\");\n\n  const generatePass = () => {\n    const isLength = range;\n    let finalCharSet = \"\";\n\n    if (uppercase) finalCharSet += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    if (lowercase) finalCharSet += \"abcdefghijklmnopqrstuvwxyz\";\n    if (symbols) finalCharSet += \"1234567890\";\n    if (numbers) finalCharSet += \"!@#$%?&*\";\n\n    let finalPass = \"\";\n\n    for (let i = 0; i < isLength; i++) {\n      let randomInt = Math.floor(Math.random() * finalCharSet.length);\n      finalPass += finalCharSet[randomInt];\n    }\n\n    setPassword(finalPass);\n    displayPassword(finalPass);\n  };\n\n  const displayPassword = finalPass => {\n    console.log({ password });\n    if (finalPass.length > 1) {\n      handleShow();\n    } else {\n      setError(\"Something went wrong\");\n    }\n  };\n\n  // modal handling functions\n  const handleClose = item => {\n    if (item) {\n      setShow(false);\n      onClose();\n    }\n\n    setShow(false);\n  };\n  const handleShow = () => setShow(true);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    generatePass();\n  };\n\n  const handleChange = newValue => {\n    console.log(newValue);\n    setRange(newValue);\n  };\n  return (\n    <>\n      <Modal isOpen={open} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Generate A Password</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text fontSize=\"xl\">Select all that apply</Text>\n            <Stack mt=\"1em\" ml=\"1.5em\" mb=\"1.5em\">\n              <Checkbox\n                value={uppercase}\n                onChange={e => setUppercase(e.target.checked)}\n                colorScheme=\"yellow\"\n                aria-label=\"Uppercase Letters\"\n                name=\"uppercase\"\n              >\n                Uppercase Letters\n              </Checkbox>\n              <Checkbox\n                value={lowercase}\n                onChange={e => setLowercase(e.target.checked)}\n                colorScheme=\"yellow\"\n                aria-label=\"Lowercase Letters\"\n                name=\"lowercase\"\n                defaultIsChecked\n              >\n                Lowercase Letters\n              </Checkbox>\n              <Checkbox\n                value={numbers}\n                onChange={e => setNumbers(e.target.checked)}\n                colorScheme=\"yellow\"\n                aria-label=\"Numbers\"\n                name=\"numbers\"\n              >\n                Numbers\n              </Checkbox>\n              <Checkbox\n                value={symbols}\n                onChange={e => setSymbols(e.target.checked)}\n                colorScheme=\"yellow\"\n                aria-label=\"Symbols\"\n                name=\"symbols\"\n              >\n                Symbols\n              </Checkbox>\n            </Stack>\n            <Text fontSize=\"xl\" mb=\"1em\">\n              Password Length\n            </Text>\n            <Slider\n              aria-label=\"password-length-slider\"\n              value={range}\n              onChange={handleChange}\n              max={40}\n            >\n              <SliderTrack bg=\"gray.200\">\n                <SliderFilledTrack bg=\"yellow.400\" />\n              </SliderTrack>\n\n              <SliderThumb bg=\"yellow.500\" />\n            </Slider>\n\n            <Text color=\"gray.600\">Length: {range}</Text>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              onClick={handleFormSubmit}\n              bg=\"yellow.400\"\n              color=\"white\"\n              _hover={{ bg: \"yellow.500\" }}\n            >\n              Generate\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n      <Example\n        handleShow={handleShow}\n        handleClose={handleClose}\n        show={show}\n        password={password}\n      />\n    </>\n  );\n}\n\nconst Example = props => {\n  const passwordRef = useRef(null);\n  const [copyStatus, setCopyStatus] = useState(\"\");\n\n  const copyToClipboard = event => {\n    try {\n      passwordRef.current.select();\n      document.execCommand(\"copy\");\n      event.target.focus();\n      setCopyStatus(\"Copied!\");\n    } catch (err) {\n      setCopyStatus(\"Something went wrong\");\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        isOpen={props.show}\n        onClose={() => {\n          props.handleClose();\n          setCopyStatus(\"\");\n        }}\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Generated Password</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text>Your password is: </Text>\n            <InputGroup className=\"mb-3\">\n              <Input\n                value={props.password}\n                ref={passwordRef}\n                className=\"text-center\"\n                variant=\"filled\"\n                isReadOnly\n              />\n              <InputLeftElement>\n                <IconButton\n                  onClick={copyToClipboard}\n                  variant=\"solid\"\n                  icon={<FaClipboard />}\n                />\n              </InputLeftElement>\n            </InputGroup>\n          </ModalBody>\n          {copyStatus && (\n            <Alert\n              status={copyStatus === \"Copied!\" ? \"success\" : \"error\"}\n              w=\"90%\"\n              style={{ margin: \"0 1.5em\" }}\n            >\n              <AlertIcon />\n              {copyStatus}\n            </Alert>\n          )}\n          <ModalFooter>\n            <Button\n              mr=\"1em\"\n              bg=\"yellow.400\"\n              color=\"white\"\n              _hover={{ bg: \"yellow.500\" }}\n              onClick={() => {\n                props.handleClose();\n                setCopyStatus(\"\");\n              }}\n            >\n              Generate Again\n            </Button>\n            <Button\n              onClick={() => {\n                props.handleClose(true);\n                setCopyStatus(\"\");\n              }}\n            >\n              Close\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/AddAccount.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/ModifyAcct.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/DeleteAcct.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":18},{"ruleId":"103","severity":1,"message":"107","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":19},{"ruleId":"103","severity":1,"message":"108","line":6,"column":20,"nodeType":"105","messageId":"106","endLine":6,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":27,"column":6,"nodeType":"111","endLine":27,"endColumn":8,"suggestions":"112"},{"ruleId":"103","severity":1,"message":"113","line":36,"column":10,"nodeType":"105","messageId":"106","endLine":36,"endColumn":17},{"ruleId":"103","severity":1,"message":"114","line":36,"column":19,"nodeType":"105","messageId":"106","endLine":36,"endColumn":29},{"ruleId":"109","severity":1,"message":"115","line":16,"column":6,"nodeType":"111","endLine":16,"endColumn":18,"suggestions":"116"},{"ruleId":"103","severity":1,"message":"117","line":21,"column":10,"nodeType":"105","messageId":"106","endLine":21,"endColumn":15},{"ruleId":"103","severity":1,"message":"117","line":37,"column":10,"nodeType":"105","messageId":"106","endLine":37,"endColumn":15},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Router' is defined but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has missing dependencies: 'checkSession' and 'currentUser'. Either include them or remove the dependency array.","ArrayExpression",["120"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAccounts'. Either include it or remove the dependency array.",["121"],"'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [checkSession, currentUser]",{"range":"126","text":"127"},"Update the dependencies array to be: [getAccounts, updateData]",{"range":"128","text":"129"},[756,758],"[checkSession, currentUser]",[540,552],"[getAccounts, updateData]"]