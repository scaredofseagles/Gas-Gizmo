[{"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/index.js":"1","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/App.js":"2","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/ForgotPassword.js":"3","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Generate.js":"4","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Dashboard.js":"5","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Login.js":"6","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/NewPage.js":"7","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/AddAccount.js":"8","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Signup.js":"9","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/contexts/AuthContext.js":"10","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/firebase.js":"11","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/HeaderBar.js":"12","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/AccountCard.js":"13","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/API.js":"14","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/crypto.js":"15","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/UpdateAccount.js":"16","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/ModifyAcct.js":"17","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/DeleteAcct.js":"18","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Landing.js":"19","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/useAuth.js":"20","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/store.js":"21","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/PrivateRoute.js":"22","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/ErrorMessage.js":"23"},{"size":412,"mtime":1635099051531,"results":"24","hashOfConfig":"25"},{"size":2034,"mtime":1635099067527,"results":"26","hashOfConfig":"25"},{"size":1965,"mtime":1614829058022,"results":"27","hashOfConfig":"25"},{"size":5509,"mtime":1617386930109,"results":"28","hashOfConfig":"25"},{"size":826,"mtime":1634943734818,"results":"29","hashOfConfig":"25"},{"size":4558,"mtime":1634948973268,"results":"30","hashOfConfig":"25"},{"size":6580,"mtime":1614829058022,"results":"31","hashOfConfig":"25"},{"size":2799,"mtime":1617386930109,"results":"32","hashOfConfig":"25"},{"size":7670,"mtime":1634929771997,"results":"33","hashOfConfig":"25"},{"size":1440,"mtime":1617386930107,"results":"34","hashOfConfig":"25"},{"size":466,"mtime":1614829058021,"results":"35","hashOfConfig":"25"},{"size":1291,"mtime":1635099756014,"results":"36","hashOfConfig":"25"},{"size":4952,"mtime":1617386930106,"results":"37","hashOfConfig":"25"},{"size":960,"mtime":1635099731091,"results":"38","hashOfConfig":"25"},{"size":431,"mtime":1617386930108,"results":"39","hashOfConfig":"25"},{"size":1588,"mtime":1617386930107,"results":"40","hashOfConfig":"25"},{"size":3951,"mtime":1617386930106,"results":"41","hashOfConfig":"25"},{"size":1619,"mtime":1617386930106,"results":"42","hashOfConfig":"25"},{"size":1838,"mtime":1634354003837,"results":"43","hashOfConfig":"25"},{"size":1043,"mtime":1635097575581,"results":"44","hashOfConfig":"25"},{"size":171,"mtime":1634611144993,"results":"45","hashOfConfig":"25"},{"size":458,"mtime":1635099677755,"results":"46","hashOfConfig":"25"},{"size":202,"mtime":1634928193518,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"mzfuch",{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/index.js",["99","100","101"],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/App.js",["102","103","104"],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/ForgotPassword.js",[],["105","106"],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Generate.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Dashboard.js",["107"],"import { useState, useEffect } from \"react\";\nimport HeaderBar from \"../components/HeaderBar\";\nimport { Container } from \"react-bootstrap\";\nimport AccountCard from \"../components/AccountCard\";\nimport API from \"../utils/API\";\nimport useStore from \"../utils/store\";\n\nexport default function Dashboard() {\n  const [accounts, setAccounts] = useState([]);\n  const { currentUser } = useStore();\n\n  useEffect(() => {\n    console.log(currentUser);\n    getAccounts();\n  }, []);\n\n  async function getAccounts() {\n    let result = await API.getAccts(currentUser.id);\n    setAccounts(result.data);\n  }\n\n  return (\n    <>\n      <HeaderBar />\n      <Container>\n        <h1 className=\"text-center mt-3\">Dashboard</h1>\n        {accounts.map(item => {\n          return <AccountCard data={item} />;\n        })}\n      </Container>\n    </>\n  );\n}\n","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Login.js",["108"],"import React, { useRef, useState } from \"react\";\nimport useAuth from \"../utils/useAuth\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Box,\n  Input,\n  Heading,\n  Center,\n  Stack,\n  Text,\n  InputGroup,\n  InputRightElement,\n  IconButton,\n  Alert,\n  AlertIcon,\n  Link as ReachLink,\n  Button\n} from \"@chakra-ui/react\";\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\nimport ErrorMessage from \"../components/ErrorMessage\";\n\nexport default function Login() {\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  };\n\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const history = useHistory();\n\n  const { login } = useAuth();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setFormValues({\n      ...formValues,\n      [name]: value\n    });\n  };\n\n  const validateFields = values => {\n    let errors = {};\n\n    if (!values.email) errors.email = \"Must enter an email\";\n    if (!values.password) errors.password = \"Must enter a password\";\n\n    return errors;\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    setFormErrors(validateFields(formValues));\n\n    if (!Object.keys(formErrors).length) {\n      let result = await login(formValues);\n\n      if (result.data.success) {\n        history.push(\"/\");\n      } else setError(result.data.message);\n    } else setError(\"Failed to log in\");\n  };\n\n  return (\n    <>\n      <Center>\n        <Stack>\n          <Box\n            borderWidth=\"2px\"\n            borderColor=\"gray.500\"\n            bg=\"white\"\n            borderRadius=\"7px\"\n            w=\"500px\"\n            minheight=\"360px\"\n            mt=\"3em\"\n            mb=\".5em\"\n            p=\"1.5em\"\n          >\n            <Center>\n              <Heading>Log In</Heading>\n            </Center>\n\n            <Stack spacing={3} mt=\"1em\">\n              <InputGroup>\n                <Text htmlFor=\"email\" mr=\"3em\">\n                  Email\n                </Text>\n                <Input\n                  placeholder=\"Enter Here\"\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formValues.email}\n                  onChange={handleChange}\n                  errorBorderColor=\"crimson\"\n                  isInvalid={formErrors.email}\n                />\n              </InputGroup>\n\n              {formErrors.email ? (\n                <ErrorMessage children={formErrors.email} />\n              ) : null}\n\n              <InputGroup>\n                <Text htmlFor=\"password\" mr=\"1em\">\n                  Password\n                </Text>\n                <Input\n                  placeholder=\"Enter Here\"\n                  type={show ? \"text\" : \"password\"}\n                  id=\"password\"\n                  name=\"password\"\n                  value={formValues.password}\n                  onChange={handleChange}\n                  errorBorderColor=\"crimson\"\n                  isInvalid={formErrors.password}\n                />\n                <InputRightElement\n                  children={\n                    <IconButton\n                      icon={show ? <AiFillEyeInvisible /> : <AiFillEye />}\n                      onClick={() => setShow(!show)}\n                      variant=\"ghost\"\n                    />\n                  }\n                />\n              </InputGroup>\n\n              {formErrors.password ? (\n                <ErrorMessage children={formErrors.password} />\n              ) : null}\n\n              {error && (\n                <Alert status=\"error\">\n                  <AlertIcon />\n                  {error}\n                </Alert>\n              )}\n            </Stack>\n\n            <Button\n              onClick={handleFormSubmit}\n              mt=\"1em\"\n              bg=\"yellow.400\"\n              color=\"white\"\n              _hover={{ bg: \"yellow.500\" }}\n              style={{ float: \"right\" }}\n            >\n              Submit\n            </Button>\n          </Box>\n          <Center>\n            <ReachLink as={Link} to=\"/forgetpassword\" color=\"yellow.400\">\n              Forget Password?\n            </ReachLink>\n          </Center>\n\n          <Center>\n            <Text color=\"gray.500\">\n              Don't have an account?{\" \"}\n              <ReachLink as={Link} to=\"/signup\" color=\"yellow.400\">\n                Sign Up\n              </ReachLink>\n            </Text>\n          </Center>\n        </Stack>\n      </Center>\n    </>\n  );\n}\n","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/NewPage.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/AddAccount.js",["109"],"import React, {useRef, useState} from 'react'\nimport { Card, Form, Button, Container, Alert } from 'react-bootstrap'\nimport HeaderBar from '../components/HeaderBar'\nimport { encrypt } from '../utils/crypto'\nimport API from '../utils/API';\nimport { useAuth } from \"../contexts/AuthContext\"\n\nexport default function AddAccount() {\n    const websiteRef = useRef()\n    const usernameRef = useRef()\n    const passwordRef = useRef()\n\n    const [error, setError] = useState('')\n    const { currentUser } = useAuth()\n\n    async function handleFormSubmit(event){\n        event.preventDefault();\n        try {\n            let hashedPass = await encrypt(passwordRef.current.value);\n\n            if (hashedPass){\n                let newAcct = {\n                    website: websiteRef.current.value,\n                    username: usernameRef.current.value,\n                    password: hashedPass,\n                    user: currentUser.uid\n                }\n                \n                let result = await API.sendAcct(newAcct)\n                if (result.data.success){\n                    window.location.replace(\"/\")\n                }else(\n                    //FIXME: change to setMessage\n                    setError(result.data.message)\n                )\n            }\n        } catch(err){\n            setError('Something went wrong. Please Try Again')\n        }\n        \n    }\n\n    return (\n        <>\n            <HeaderBar />\n            <Container>\n                <Card className=\"mt-5\">\n                    <Card.Body>\n                        <h2 className=\"mb-4\">Add Account</h2>\n                        <Form onSubmit={handleFormSubmit}>\n                            <Form.Group id=\"website\">\n                                <Form.Label>Website </Form.Label>\n                                <Form.Control type=\"link\" ref={websiteRef} placeholder=\"Paste the URL here\" required/>\n                            </Form.Group>\n                            <Form.Group id=\"username\">\n                                <Form.Label>Username or Email</Form.Label>\n                                <Form.Control ref={usernameRef} required/>\n                            </Form.Group>\n                            <Form.Group id=\"password\">\n                                <Form.Label>Password </Form.Label>\n                                <Form.Control type=\"password\" ref={passwordRef} required/>\n                            </Form.Group>\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\n                            <button className=\"rounded-lg bg-warmblue-500 hover:bg-warmblue-700 py-2.5 px-4 text-white float-right\">Add</button>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </Container>\n            \n        </>\n    )\n}\n","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Signup.js",["110","111"],"import { useState } from \"react\";\nimport useAuth from \"../utils/useAuth\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Box,\n  Input,\n  Heading,\n  Center,\n  Stack,\n  Text,\n  InputGroup,\n  InputRightElement,\n  IconButton,\n  Alert,\n  AlertIcon,\n  Link as ReachLink,\n  Button\n} from \"@chakra-ui/react\";\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\nimport ErrorMessage from \"../components/ErrorMessage\";\n\nexport default function Signup() {\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    phoneNum: \"\",\n    funName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPass: \"\"\n  };\n\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [show, setShow] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const history = useHistory();\n\n  const { signUp } = useAuth();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setFormValues({\n      ...formValues,\n      [name]: value\n    });\n  };\n\n  const validateFields = values => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n    let errors = {};\n\n    if (!values.firstName) errors.firstName = \"Must enter a first name\";\n    if (!values.lastName) errors.lastName = \"Must enter a last name\";\n\n    if (!values.email) errors.email = \"Must enter an email\";\n    else if (!emailRegex.test(values.email))\n      errors.email = \"Email is not valid\";\n\n    if (!values.password) errors.password = \"Must enter a password\";\n    else if (values.password.length < 8)\n      errors.password = \"Password must be at least 8 characters\";\n    else if (values.password.length > 15)\n      errors.password = \"Password must not exceed 15 characters\";\n\n    if (!values.confirmPass) errors.confirmPass = \"Must confirm password\";\n    else if (values.password !== values.confirmPass)\n      errors.confirmPass = \"Passwords do not match\";\n\n    return errors;\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    setFormErrors(validateFields(formValues));\n\n    if (!Object.keys(formErrors).length) {\n      let result = await signUp(formValues);\n\n      if (result.data.success) {\n        history.push(\"/\");\n      } else setError(result.data.message);\n    } else setError(\"Failed to Create User.\");\n  };\n\n  return (\n    <>\n      <Center>\n        <Stack>\n          <Box\n            borderWidth=\"2px\"\n            borderColor=\"gray.500\"\n            bg=\"white\"\n            borderRadius=\"7px\"\n            w=\"500px\"\n            minheight=\"360px\"\n            mt=\"3em\"\n            mb=\".5em\"\n            p=\"1.5em\"\n          >\n            <Center>\n              <Heading>Sign Up</Heading>\n            </Center>\n\n            <Stack spacing={3} mt=\"1em\">\n              <InputGroup>\n                <Text htmlFor=\"firstName\" mr=\"1em\">\n                  First Name\n                </Text>\n                <Input\n                  w=\"60%\"\n                  placeholder=\"Enter Here\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  value={formValues.firstName}\n                  onChange={handleChange}\n                  errorBorderColor=\"crimson\"\n                  isInvalid={formErrors.firstName}\n                />\n              </InputGroup>\n\n              {formErrors.firstName ? (\n                <ErrorMessage children={formErrors.firstName} />\n              ) : null}\n\n              <InputGroup>\n                <Text htmlFor=\"lastName\" mr=\"1em\">\n                  Last Name\n                </Text>\n                <Input\n                  w=\"60%\"\n                  placeholder=\"Enter Here\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  value={formValues.lastName}\n                  onChange={handleChange}\n                  errorBorderColor=\"crimson\"\n                  isInvalid={formErrors.lastName}\n                />\n              </InputGroup>\n\n              {formErrors.lastName ? (\n                <ErrorMessage children={formErrors.lastName} />\n              ) : null}\n\n              <InputGroup>\n                <Text htmlFor=\"email\" mr=\"1em\">\n                  Email\n                </Text>\n                <Input\n                  placeholder=\"Enter Here\"\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formValues.email}\n                  onChange={handleChange}\n                  errorBorderColor=\"crimson\"\n                  isInvalid={formErrors.email}\n                />\n              </InputGroup>\n\n              {formErrors.email ? (\n                <ErrorMessage children={formErrors.email} />\n              ) : null}\n\n              <InputGroup>\n                <Text htmlFor=\"password\" mr=\"1em\">\n                  Password\n                </Text>\n                <Input\n                  placeholder=\"Enter Here\"\n                  type={show ? \"text\" : \"password\"}\n                  id=\"password\"\n                  name=\"password\"\n                  value={formValues.password}\n                  onChange={handleChange}\n                  errorBorderColor=\"crimson\"\n                  isInvalid={formErrors.password}\n                />\n                <InputRightElement\n                  children={\n                    <IconButton\n                      icon={show ? <AiFillEyeInvisible /> : <AiFillEye />}\n                      onClick={() => setShow(!show)}\n                      variant=\"ghost\"\n                    />\n                  }\n                />\n              </InputGroup>\n\n              {formErrors.password ? (\n                <ErrorMessage children={formErrors.password} />\n              ) : null}\n\n              <InputGroup>\n                <Text htmlFor=\"confirmPass\" mr=\"1em\">\n                  Confirm Password\n                </Text>\n                <Input\n                  placeholder=\"Enter Here\"\n                  type={showConfirm ? \"text\" : \"password\"}\n                  id=\"confirmPass\"\n                  name=\"confirmPass\"\n                  value={formValues.confirmPass}\n                  onChange={handleChange}\n                  errorBorderColor=\"crimson\"\n                  isInvalid={formErrors.confirmPass}\n                />\n                <InputRightElement\n                  children={\n                    <IconButton\n                      icon={\n                        showConfirm ? <AiFillEyeInvisible /> : <AiFillEye />\n                      }\n                      onClick={() => setShowConfirm(!showConfirm)}\n                      variant=\"ghost\"\n                    />\n                  }\n                />\n              </InputGroup>\n\n              {formErrors.confirmPass ? (\n                <ErrorMessage children={formErrors.confirmPass} />\n              ) : null}\n\n              {error && (\n                <Alert status=\"error\">\n                  <AlertIcon />\n                  {error}\n                </Alert>\n              )}\n            </Stack>\n\n            <Button\n              onClick={handleFormSubmit}\n              mt=\"1em\"\n              bg=\"yellow.400\"\n              color=\"white\"\n              _hover={{ bg: \"yellow.500\" }}\n              style={{ float: \"right\" }}\n            >\n              Submit\n            </Button>\n          </Box>\n          <Center>\n            <Text color=\"gray.500\">\n              Already have an account?{\" \"}\n              <ReachLink as={Link} to=\"/login\" color=\"yellow.400\">\n                Login\n              </ReachLink>\n            </Text>\n          </Center>\n        </Stack>\n      </Center>\n    </>\n  );\n}\n","/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/contexts/AuthContext.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/firebase.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/HeaderBar.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/AccountCard.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/API.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/crypto.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/UpdateAccount.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/ModifyAcct.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/DeleteAcct.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/views/Landing.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/useAuth.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/store.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/utils/PrivateRoute.js",[],"/Users/dkaze/Desktop/Projects/Pass-Lock/client/src/components/ErrorMessage.js",[],{"ruleId":"112","severity":1,"message":"113","line":5,"column":3,"nodeType":"114","messageId":"115","endLine":5,"endColumn":9},{"ruleId":"112","severity":1,"message":"116","line":6,"column":3,"nodeType":"114","messageId":"115","endLine":6,"endColumn":8},{"ruleId":"112","severity":1,"message":"117","line":7,"column":3,"nodeType":"114","messageId":"115","endLine":7,"endColumn":13},{"ruleId":"112","severity":1,"message":"118","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":22},{"ruleId":"112","severity":1,"message":"119","line":7,"column":20,"nodeType":"114","messageId":"115","endLine":7,"endColumn":26},{"ruleId":"120","severity":1,"message":"121","line":33,"column":6,"nodeType":"122","endLine":33,"endColumn":8,"suggestions":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"120","severity":1,"message":"128","line":15,"column":6,"nodeType":"122","endLine":15,"endColumn":8,"suggestions":"129"},{"ruleId":"112","severity":1,"message":"130","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":23},{"ruleId":"112","severity":1,"message":"131","line":2,"column":22,"nodeType":"114","messageId":"115","endLine":2,"endColumn":28},{"ruleId":"112","severity":1,"message":"132","line":36,"column":10,"nodeType":"114","messageId":"115","endLine":36,"endColumn":17},{"ruleId":"112","severity":1,"message":"133","line":36,"column":19,"nodeType":"114","messageId":"115","endLine":36,"endColumn":29},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'useHistory' is defined but never used.","'AuthProvider' is defined but never used.","'Router' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkSession' and 'currentUser'. Either include them or remove the dependency array.","ArrayExpression",["134"],"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"React Hook useEffect has missing dependencies: 'currentUser' and 'getAccounts'. Either include them or remove the dependency array.",["137"],"'useRef' is defined but never used.","'Button' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",{"desc":"138","fix":"139"},"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [checkSession, currentUser]",{"range":"142","text":"143"},"Update the dependencies array to be: [currentUser, getAccounts]",{"range":"144","text":"145"},[949,951],"[checkSession, currentUser]",[463,465],"[currentUser, getAccounts]"]