{"version":3,"sources":["firebase.js","contexts/AuthContext.js","views/Signup.js","components/HeaderBar.js","utils/crypto.js","utils/API.js","components/DeleteAcct.js","components/ModifyAcct.js","components/UpdateAccount.js","components/AccountCard.js","views/Dashboard.js","views/Login.js","PrivateRoute.js","views/ForgotPassword.js","views/NewPage.js","views/AddAccount.js","views/Generate.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","projectId","authDomain","storageBucket","messagingSenderId","appId","measurmentId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","confirmPassword","cred","firebase_","EmailAuthProvider","credential","reauthenticateWithCredential","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","event","a","preventDefault","current","push","Card","bg","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","HeaderBar","Navbar","Brand","href","Nav","Link","style","color","onClick","CryptoJS","require","encrypt","AES","toString","API","getAll","axios","get","sendAcct","data","post","getAccts","editAcct","put","removeAcct","delete","updateData","deleteData","user_id","DeleteAcct","props","message","setMessage","close","setClosing","console","log","result","success","setTimeout","handleClose","Modal","show","open","onHide","Header","closeButton","Title","url","margin","marginLeft","ModifyAcct","setShow","setOpen","setValue","websiteRef","usernameRef","hashedPass","newData","ConfirmModal","allow","padding","defaultValue","username","InputGroup","readOnly","onChange","e","target","Append","float","OptionBar","styled","div","UpdateAccount","anchorEl","setAnchorEl","openEdit","setOpenEdit","openDelete","setOpenDelete","IconButton","currentTarget","Menu","keepMounted","Boolean","onClose","MenuItem","AccountCard","copyStatus","setCopyStatus","alert","setAlert","copyToClipboard","select","document","execCommand","err","minWidth","src","image","alt","width","height","FormControl","decrypt","enc","Utf8","transition","dismissible","confirmPasswordRef","Dashboard","accounts","setAccounts","uid","getAccounts","Container","map","item","Login","PrivateRoute","Component","component","rest","render","ForgotPassword","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","NewPage","classes","useTheme","CssBaseline","AppBar","position","clsx","Toolbar","aria-label","edge","Typography","noWrap","Drawer","anchor","paper","direction","Divider","List","text","index","ListItem","button","ListItemIcon","ListItemText","primary","paragraph","AddAccount","newAcct","website","window","location","replace","placeholder","Generate","range","setRange","setPassword","uppercase","setUppercase","lowercase","setLowercase","numbers","setNumbers","symbols","setSymbols","generatePass","isLength","finalCharSet","finalPass","i","Math","floor","random","length","handleShow","displayPassword","Example","paddingLeft","paddingRight","marginTop","Check","checked","inline","label","name","defaultChecked","controlId","Slider","newValue","valueLabelDisplay","max","aria-labelledby","FormLabel","focus","Footer","App","exact","path","fluid","minHeight","maxWidth","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a43ac8fd.chunk.js","sourcesContent":["import firebase from 'firebase'\nimport 'firebase/auth'\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_APIKEY,\n  projectId: process.env.REACT_APP_PROJECTID,\n  authDomain: process.env.REACT_APP_AUTH,\n  storageBucket: process.env.REACT_APP_STORAGE,\n  messagingSenderId: process.env.REACT_APP_MESSAGEID,\n  appId: process.env.REACT_APP_APPID,\n  measurmentId: process.env.REACT_APP_MEASUREMENTID\n})\n\nexport const auth = app.auth()\nexport default app","import React, { useContext, useState, useEffect } from 'react'\nimport app, { auth } from '../firebase'\n\nconst AuthContext = React.createContext()\n\nexport function useAuth(){\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({children}){\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    function signup(email, password){\n        return auth.createUserWithEmailAndPassword(email, password)\n    }\n\n    function login(email, password){\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    function confirmPassword(email, password){\n        const cred = app.firebase_.auth.EmailAuthProvider.credential(email, password);\n        const user = app.auth().currentUser;\n        return user.reauthenticateWithCredential(cred)\n    }\n\n    function logout(){\n        return auth.signOut()\n    }\n\n    function resetPassword(email){\n        return auth.sendPasswordResetEmail(email)\n    }\n\n    useEffect(() =>{\n        const unsubscribe = auth.onAuthStateChanged(user =>{\n            setCurrentUser(user)\n            setLoading(false)\n        })\n\n        return unsubscribe\n    }, [])\n\n    const value = {\n        currentUser,\n        signup,\n        login,\n        logout,\n        resetPassword,\n        confirmPassword\n    }\n\n    return(\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}","import React, { useRef, useState } from 'react'\nimport { Card, Form, Button, Alert } from 'react-bootstrap'\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from 'react-router-dom'\n\nexport default function Signup() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    const { signup} = useAuth()\n\n    async function handleFormSubmit(event){\n        event.preventDefault()\n\n        if (passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError('Passwords do not match')\n        }\n\n        try{\n            setError('')\n            setLoading(true)\n            await signup(emailRef.current.value, passwordRef.current.value)\n            history.push(\"/\")\n        } catch{\n            setError('Failed to create an account')\n        }\n\n        setLoading(false)\n        \n    }\n\n    return (\n        <>\n           <Card bg=\"light\">\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\" >Sign Up</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Form onSubmit={handleFormSubmit}>\n                        <Form.Group id='email'>\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required/>\n                        </Form.Group>\n                        <Form.Group id='password'>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordRef} required/>\n                        </Form.Group>\n                        <Form.Group id='password-confirm'>\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required/>\n                        </Form.Group>\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\" variant=\"primary\">Sign Up</Button>\n                    </Form>\n                </Card.Body>\n            </Card> \n            <div className=\"w-100 text-center mt-2\">\n                Already have an account? <Link to=\"/login\">Log In</Link>\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport { Navbar, Nav, Button, Alert } from 'react-bootstrap'\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { useHistory } from 'react-router-dom'\nimport { FcLock } from \"react-icons/fc\";\n\nexport default function HeaderBar() {\n    const [error, setError] = useState('')\n    const history = useHistory()\n    const {currentUser, logout} = useAuth()\n\n    async function handleLogOut(){\n        setError('')\n        try {\n            await logout()\n            history.push(\"/login\")\n        } catch{\n            setError(\"Failed to Logout\")\n        }\n\n    }\n    \n    return (\n        <>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"/\"><FcLock /></Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                    <Nav.Link href=\"/add\">Add</Nav.Link>\n                    <Nav.Link href=\"/generate\">Generate</Nav.Link>\n                </Nav>\n\n\n                <span style={{color: \"whitesmoke\"}}>Welcome, {currentUser.email}</span>\n                <Button variant=\"link\" onClick={handleLogOut}>Log Out</Button>\n            </Navbar>\n            <div>\n                {error && <Alert variant=\"danger\">{error}</Alert>}\n            </div>\n            \n        </>\n    )\n}\n","const CryptoJS = require(\"crypto-js\");\n\nconst encrypt = password =>{\n    let cipherText = CryptoJS.AES.encrypt(password, process.env.REACT_APP_SECRETKEY).toString();\n\n    return cipherText\n};\n\nconst decrypt = password =>{\n    let decryptedText = CryptoJS.AES.decrypt(password, process.env.REACT_APP_SECRETKEY)\n    let originalText = decryptedText.toString(CryptoJS.enc.Utf8);\n    return originalText\n}\n\nexport { encrypt, decrypt };","import axios from 'axios'\n\nlet API = {\n    getAll: function(){\n        return axios.get(\"/api/users\")\n    },\n    sendAcct: data =>{\n        return axios.post(\"/api/accounts\", data)\n    },\n    getAccts: id =>{\n        return axios.get(\"api/accounts/\" + id)\n    },\n    editAcct: (id, data) => {\n        return axios.put(\"/api/accounts/\" + id, data)\n    },\n    removeAcct: id => {\n        return axios.delete(\"api/accounts/\" + id)\n    },\n    updateData: function(){},\n    deleteData: function(user_id){\n        return axios.delete(\"api/users\" + user_id)\n    }\n};\n\nexport default API;","import { useState } from \"react\";\nimport { Alert, Modal, Button } from \"react-bootstrap\";\nimport API from \"../utils/API\";\n\nexport default function DeleteAcct(props){\n    const [message, setMessage] = useState('');\n    const [close, setClosing] = useState(false)\n\n    async function handleSubmit(){\n        console.log(props.data)\n        let result = await API.removeAcct(props.data.id)\n        console.log(result.data)\n        setMessage(result.data.message)\n        if (result.data.success){\n            setClosing(!close)\n            setTimeout(() => {\n                handleClose()\n            }, 3000);\n            //TODO something to update dashboard\n        }\n    }\n\n    function handleClose(){\n        props.handleClose();\n        setMessage('');\n        setClosing(false);\n    }\n\n    return (\n        <Modal show={props.open} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Remove <i>{props.data.url}</i></Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                Are you sure you want to delete this account?\n            </Modal.Body>\n\n            {message && <Alert className=\"text-center ml-4 mr-4\" variant={message === \"Successfully Removed Account\" ? 'success' : 'danger'}>{message}</Alert>}\n\n            <div style={{margin: '0 4% 3% 3%', marginLeft: 'auto'}}>\n                <Button disabled={close} onClick={handleClose} variant=\"outline-secondary\" className=\"mr-1\">Cancel</Button>\n                <Button disabled={close} onClick={handleSubmit} variant=\"danger\">Delete</Button>\n            </div>\n            \n        </Modal>\n    )\n}","import { useState, useRef } from \"react\";\nimport { Alert, InputGroup, Modal, Form, Button } from \"react-bootstrap\";\nimport API from \"../utils/API\";\nimport { MdModeEdit } from \"react-icons/md\";\nimport { encrypt } from \"../utils/crypto\";\nimport { ConfirmModal } from \"./AccountCard\"\n\nexport default function ModifyAcct(props){\n    const [show, setShow] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [message, setMessage] = useState('');\n    const [close, setClosing] = useState(false);\n    const [value, setValue] = useState('password'); //initial value set so bullets are shown -_-\n\n    const websiteRef = useRef();\n    const usernameRef = useRef();\n\n    async function handleFormSubmit(event){\n        event.preventDefault();\n        \n        let hashedPass;\n\n        if (value !== 'password' && value !== \"\") hashedPass = await encrypt(value);\n\n        const newData = {\n            url: websiteRef.current.value,\n            email: usernameRef.current.value,\n            password: hashedPass ? hashedPass : null\n        }\n\n        let result = await API.editAcct(props.data.id, newData)  \n        setMessage(result.data.message)\n        if (result.data.success){\n            setClosing(!close)\n            setTimeout(handleClose, 3000)\n            //TODO: update dashboard\n        }\n    }\n\n    function handleClose(){\n        props.handleClose();\n        setShow(false);\n        setMessage('');\n        setValue('password');\n        setClosing(false);\n    }\n\n    return (\n        <>\n            <ConfirmModal \n                open={open} \n                handleClose={() => setOpen(!open)} \n                allow={() => {setShow(!show); setValue('')}}\n            />\n\n            <Modal show={props.open} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Modify <i>{props.data.url}</i></Modal.Title>\n                </Modal.Header>\n                <Modal.Body style={{padding: '5%'}}>\n                    <Form onSubmit={handleFormSubmit}>\n                        <Form.Group>\n                            <Form.Label>Website: </Form.Label>\n                            <Form.Control defaultValue={props.data.url} ref={websiteRef}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Username/Email: </Form.Label>\n                            <Form.Control defaultValue={props.data.username} ref={usernameRef}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Password: </Form.Label>\n                            <InputGroup>\n                                <Form.Control \n                                    type={!show ? \"password\" : \"text\"} \n                                    value={value} \n                                    readOnly={!show} \n                                    onChange={(e) => setValue(e.target.value)}\n                                />\n                                <InputGroup.Append>\n                                    <Button onClick={() => !show ? setOpen(!open) : setShow(!show)} variant=\"outline-secondary\" disabled={show}><MdModeEdit /></Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                            \n                        </Form.Group>\n\n                        {message && <Alert variant={message === \"Successfully Updated Account\" ? 'success' : 'danger'} className=\"text-center\">{message}</Alert>}\n\n                        <div style={{float: \"right\"}}>\n                            <Button disabled={close} onClick={handleClose} type=\"button\" variant=\"outline-secondary\" className=\"mr-1\">Cancel</Button>\n                            <Button disabled={close} type=\"submit\">Save</Button>\n                        </div>\n                    \n                    </Form>\n                </Modal.Body>\n            </Modal>\n        </>\n    )\n}","import { useState } from \"react\";\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport DeleteAcct from \"./DeleteAcct\";\nimport ModifyAcct from \"./ModifyAcct\";\n\nconst OptionBar = styled.div`\n  position: absolute;\n  top: 5%;\n  right: 1.5%;\n`;\n\nexport default function UpdateAccount(props){\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [openEdit, setOpenEdit] = useState(false);\n    const [openDelete, setOpenDelete] = useState(false);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            <OptionBar>\n                <IconButton \n                children={<BsThreeDotsVertical />}\n                onClick={handleClick}\n                />\n            </OptionBar>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={() => {handleClose(); setOpenEdit(!openEdit)}}>Edit</MenuItem>\n                <MenuItem onClick={() => {handleClose(); setOpenDelete(!openDelete)}}>Remove</MenuItem>\n            </Menu>\n\n            <ModifyAcct data={props.data} open={openEdit} handleClose={() => setOpenEdit(!openEdit)}/>\n            <DeleteAcct data={props.data} open={openDelete} handleClose={() => setOpenDelete(!openDelete)}/>\n        </>\n    )\n}","import { useState, useRef } from \"react\";\nimport { Button, Alert, InputGroup, FormControl, Modal, Form } from \"react-bootstrap\";\nimport { BsEyeSlashFill, BsEyeFill } from \"react-icons/bs\";\nimport { FaClipboard } from \"react-icons/fa\";\nimport { decrypt } from \"../utils/crypto\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport UpdateAccount from \"./UpdateAccount\";\n\nexport default function AccountCard(props) {\n  const [show, setShow] = useState(false)\n  const [copyStatus, setCopyStatus] = useState(\"\");\n  const [open, setOpen] = useState(false)\n  const [alert, setAlert] = useState(false)\n\n  const websiteRef = useRef();\n  const usernameRef = useRef();\n  const passwordRef = useRef();\n\n  function copyToClipboard(ref) {\n    try {\n      ref.current.select();\n      document.execCommand(\"copy\");\n      //event.target.focus();\n      setCopyStatus(\"Copied!\");\n      setAlert(!alert)\n    } catch (err) {\n      setCopyStatus(\"Something went wrong\");\n    }\n  }\n\n  function handleClose(){\n    setOpen(!open)\n  }\n\n  return (\n    <>\n      <ConfirmModal open={open} handleClose={handleClose} allow={() => setShow(!show)}/>\n      <div className=\"card mt-4 mb-3\" style={{ minWidth: \"30vw\" }}>\n        <div className=\"row g-0\">\n          <div className=\"col-md-4\">\n            <img src={props.data.image || \"https://via.placeholder.com/200\"} alt=\"account\" width=\"200\" height=\"200\"/>\n          </div>\n          <div className=\"col-md-3\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Account Name</h5>\n              <p className=\"card-text\">\n                <strong>Website: </strong>\n                <InputGroup>\n                <FormControl value={props.data.url} ref={websiteRef} readOnly/>\n                <InputGroup.Append>\n                  <Button variant=\"outline-secondary\" onClick={() => copyToClipboard(websiteRef)}><FaClipboard /></Button>\n                </InputGroup.Append>\n              </InputGroup>\n              </p>\n            </div>\n          </div>\n          <div className=\"col-md-3\">\n            <div className=\"card-body align-items-center\">\n              <p className=\"card-text\">\n                <strong>Username: </strong>\n                <InputGroup>\n                  <FormControl value={props.data.username} ref={usernameRef} readOnly/>\n                  <InputGroup.Append>\n                    <Button variant=\"outline-secondary\" onClick={() => copyToClipboard(usernameRef)}><FaClipboard /></Button>\n                  </InputGroup.Append>\n                </InputGroup>\n              </p>\n              <p className=\"card-text\">\n                <strong>Password: </strong>\n                <InputGroup>\n                  <FormControl type={!show ? \"password\" : \"text\"} ref={passwordRef} value={decrypt(props.data.password)} readOnly/>\n                  <InputGroup.Append>\n                    <Button variant=\"outline-secondary\" onClick={() => !show ? setOpen(!open) : setShow(!show)}> { !show ? <BsEyeFill /> : <BsEyeSlashFill />} </Button>\n                    <Button variant=\"outline-secondary\" onClick={() => copyToClipboard(passwordRef)}><FaClipboard /></Button>\n                  </InputGroup.Append>\n                </InputGroup>\n              </p>\n            </div>\n          </div>\n          <UpdateAccount data={props.data}/>\n          \n        </div>\n\n        {copyStatus && <Alert show={alert} className=\"text-center\" variant={copyStatus === \"Copied!\" ? 'success' : 'danger'} style={{margin: '1.5% 3%'}} transition dismissible onClose={() => setAlert(false)}>{copyStatus}</Alert>}\n      </div>\n    </>\n  );\n}\n\nexport function ConfirmModal(props){\n  const [message, setMessage] = useState('');\n  const [close, setClosing] = useState(false);\n\n  const confirmPasswordRef = useRef();\n  const { confirmPassword, currentUser } = useAuth();\n\n  async function handleFormSubmit(event){\n    event.preventDefault();\n\n    try {\n      await confirmPassword(currentUser.email, confirmPasswordRef.current.value)\n      setMessage('Confirmed!')\n      setClosing(!close)\n      setTimeout(() => {\n        props.handleClose()\n        setMessage('')\n        setClosing(false);\n        props.allow();\n      }, 2000);\n    } catch (error) {\n      setMessage('Failed to Confirm Password')\n      console.error(error)\n    }\n\n  }\n\n  return(\n    <Modal show={props.open} onHide={() => {props.handleClose(); setMessage('')}}>\n      <Modal.Header closeButton>\n        <Modal.Title>Confirm Identity</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form.Group>\n          <Form.Label>Please confirm your password: </Form.Label>\n          <Form.Control type=\"password\" ref={confirmPasswordRef} required/>\n        </Form.Group>\n\n        {message && <Alert className=\"text-center\" variant={message === \"Confirmed!\" ? \"success\" : \"danger\"}>{message}</Alert>}\n\n        <Button onClick={handleFormSubmit} disabled={close} className=\"float-right\">Submit</Button>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","import { useState, useEffect } from 'react';\nimport HeaderBar from '../components/HeaderBar'\nimport { Container } from 'react-bootstrap'\nimport AccountCard from '../components/AccountCard'\nimport API from '../utils/API';\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function Dashboard() {\n    const [accounts, setAccounts] = useState([]);\n    const { currentUser } = useAuth();\n\n    useEffect(() => {\n        getAccounts()\n    }, [])\n\n    async function getAccounts(){\n        let result = await API.getAccts(currentUser.uid);\n        setAccounts(result.data)\n    }\n\n    return (\n        <>\n            <HeaderBar/>\n            <Container>\n                <h1 className=\"text-center mt-3\">Dashboard</h1>\n                {accounts.map(item => {\n                    return <AccountCard data={item}/>\n                })}\n            </Container>\n        </>\n    )\n}\n\n","import React, { useRef, useState } from 'react'\nimport { Card, Form, Button, Alert } from 'react-bootstrap'\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from 'react-router-dom'\n\nexport default function Login() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n\n    const history = useHistory()\n\n    const { login } = useAuth()\n\n    async function handleFormSubmit(event){\n        event.preventDefault()\n\n        \n\n        try{\n            setError('')\n            setLoading(true)\n            await login(emailRef.current.value, passwordRef.current.value)\n            history.push(\"/\")\n        } catch{\n            setError('Failed to log in')\n        }\n\n        setLoading(false)\n        \n    }\n\n    return (\n        <>\n           <Card bg=\"light\">\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\" >Log In</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Form onSubmit={handleFormSubmit}>\n                        <Form.Group id='email'>\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required/>\n                        </Form.Group>\n                        <Form.Group id='password'>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordRef} required/>\n                        </Form.Group>\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\" variant=\"primary\">Log In</Button>\n                    </Form>\n                    <div className=\"w-100 text-center mt-3\">\n                        <Link to=\"/forgot-password\">Forgot Password?</Link>\n                    </div>\n                </Card.Body>\n            </Card> \n            <div className=\"w-100 text-center mt-2\">\n                Don't have an account? <Link to=\"/signup\">Sign up</Link>\n            </div>\n        </>\n    )\n}\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport { useAuth } from \"./contexts/AuthContext\"\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth()\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }}\n    ></Route>\n  )\n}\n","import React, { useRef, useState } from 'react'\nimport { Card, Form, Button, Alert } from 'react-bootstrap'\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link } from 'react-router-dom'\n\nexport default function ForgotPassword(props) {\n    \n    const emailRef = useRef()\n\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [message, setMessage] = useState(\"\")\n\n    const { resetPassword } = useAuth()\n\n    async function handleFormSubmit(event){\n        event.preventDefault()\n\n        \n\n        try{\n            setError('')\n            setLoading(true)\n            await resetPassword(emailRef.current.value)\n            setMessage('Success! Check your email for further instructions')\n        } catch{\n            setError('Failed to reset password')\n        }\n\n        setLoading(false)\n        \n    }\n\n    return (\n        <>\n           <Card bg=\"light\">\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\" >Password Reset</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    {message && <Alert variant=\"success\">{message}</Alert>}\n                    <Form onSubmit={handleFormSubmit}>\n                        <Form.Group id='email'>\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required/>\n                        </Form.Group>\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\" variant=\"primary\">Reset Password</Button>\n                    </Form>\n                    <div className=\"w-100 text-center mt-3\">\n                        <Link to=\"/login\">Log In</Link>\n                    </div>\n                </Card.Body>\n            </Card> \n            <div className=\"w-100 text-center mt-2\">\n                Don't have an account? <Link to=\"/signup\">Sign up</Link>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function NewPage() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Persistent drawer\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['View All', 'Add Account', 'Edit Account', 'Remove Account'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['Favourites', 'Profile'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Typography paragraph>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n          ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum\n          facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit\n          gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id\n          donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit\n          adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras.\n          Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis\n          imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget\n          arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\n          donec massa sapien faucibus et molestie ac.\n        </Typography>\n        <Typography paragraph>\n          Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla\n          facilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac\n          tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat\n          consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed\n          vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In\n          hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem et\n          tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin\n          nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas\n          accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.\n        </Typography>\n      </main>\n    </div>\n  );\n}","import React, {useRef, useState} from 'react'\nimport { Card, Form, Button, Container, Alert } from 'react-bootstrap'\nimport HeaderBar from '../components/HeaderBar'\nimport { encrypt } from '../utils/crypto'\nimport API from '../utils/API';\nimport { useAuth } from \"../contexts/AuthContext\"\n\nexport default function AddAccount() {\n    const websiteRef = useRef()\n    const usernameRef = useRef()\n    const passwordRef = useRef()\n\n    const [error, setError] = useState('')\n    const { currentUser } = useAuth()\n\n    async function handleFormSubmit(event){\n        event.preventDefault();\n        try {\n            let hashedPass = await encrypt(passwordRef.current.value);\n\n            if (hashedPass){\n                let newAcct = {\n                    website: websiteRef.current.value,\n                    username: usernameRef.current.value,\n                    password: hashedPass,\n                    user: currentUser.uid\n                }\n                \n                let result = await API.sendAcct(newAcct)\n                if (result.data.success){\n                    window.location.replace(\"/\")\n                }else(\n                    //FIXME: change to setMessage\n                    setError(result.data.message)\n                )\n            }\n        } catch(err){\n            setError('Something went wrong. Please Try Again')\n        }\n        \n    }\n\n    return (\n        <>\n            <HeaderBar />\n            <Container>\n                <Card className=\"mt-5\">\n                    <Card.Body>\n                        <h2 className=\"mb-4\">Add Account</h2>\n                        <Form onSubmit={handleFormSubmit}>\n                            <Form.Group id=\"website\">\n                                <Form.Label>Website </Form.Label>\n                                <Form.Control type=\"link\" ref={websiteRef} placeholder=\"Paste the URL here\" required/>\n                            </Form.Group>\n                            <Form.Group id=\"username\">\n                                <Form.Label>Username or Email</Form.Label>\n                                <Form.Control ref={usernameRef} required/>\n                            </Form.Group>\n                            <Form.Group id=\"password\">\n                                <Form.Label>Password </Form.Label>\n                                <Form.Control type=\"password\" ref={passwordRef} required/>\n                            </Form.Group>\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\n                            <button className=\"rounded-lg bg-warmblue-500 hover:bg-warmblue-700 py-2.5 px-4 text-white float-right\">Add</button>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </Container>\n            \n        </>\n    )\n}\n","import { useState, useRef } from \"react\";\nimport HeaderBar from \"../components/HeaderBar\";\nimport {\n  Card,\n  Container,\n  Form,\n  Button,\n  Modal,\n  Alert,\n  InputGroup,\n  FormControl,\n  FormLabel\n} from \"react-bootstrap\";\nimport { FaClipboard } from \"react-icons/fa\";\nimport { Slider } from '@material-ui/core';\n\nexport default function Generate() {\n  const [show, setShow] = useState(false);\n  const [range, setRange] = useState(10);\n  const [password, setPassword] = useState(\"\");\n\n  const [uppercase, setUppercase] = useState(false);\n  const [lowercase, setLowercase] = useState(true);\n  const [numbers, setNumbers] = useState(false);\n  const [symbols, setSymbols] = useState(false);\n\n  const [error, setError] = useState(\"\");\n\n  function generatePass() {\n    const isLength = range;\n    let finalCharSet = \"\";\n\n    if (uppercase) finalCharSet += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    if (lowercase) finalCharSet += \"abcdefghijklmnopqrstuvwxyz\";\n    if (symbols) finalCharSet += \"1234567890\";\n    if (numbers) finalCharSet += \"!@#$%?&*\";\n\n    console.log(\"finalCharSet=\", finalCharSet);\n\n    let finalPass = \"\";\n\n    for (let i = 0; i < isLength; i++) {\n      let randomInt = Math.floor(Math.random() * finalCharSet.length + 1);\n      finalPass += finalCharSet[randomInt];\n    }\n\n    console.log({ finalPass });\n    setPassword(finalPass);\n    displayPassword(finalPass);\n  }\n\n  function displayPassword(finalPass) {\n    console.log({ password });\n    if (finalPass.length > 1) {\n      handleShow();\n    } else {\n      setError(\"Something went wrong\");\n    }\n  }\n\n  // modal handling functions\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    generatePass();\n    //handleShow()\n  }\n  const handleChange = (event, newValue) => {\n    setRange(newValue);\n  };\n  return (\n    <>\n      <HeaderBar />\n      <Container>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        <Example\n          handleShow={handleShow}\n          handleClose={handleClose}\n          show={show}\n          password={password}\n        />\n        <Card style={{ paddingLeft: \"40px\", paddingRight: \"40px\", marginTop: '5%' }}>\n          <h2 className=\"text-center mt-3\">Generate A Password</h2>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Group>\n              <h4>Select all that apply</h4>\n              <Form.Check\n                value={uppercase}\n                onChange={(e) => setUppercase(e.target.checked)}\n                inline\n                label=\"Uppercase Letters\"\n                type=\"checkbox\"\n                name=\"uppercase\"\n              />\n              <Form.Check\n                value={lowercase}\n                onChange={(e) => setLowercase(e.target.checked)}\n                inline\n                label=\"Lowercase Letters\"\n                type=\"checkbox\"\n                name=\"lowercase\"\n                defaultChecked\n              />\n              <Form.Check\n                value={numbers}\n                onChange={(e) => setNumbers(e.target.checked)}\n                inline\n                label=\"Numbers\"\n                type=\"checkbox\"\n                name=\"numbers\"\n              />\n              <Form.Check\n                value={symbols}\n                onChange={(e) => setSymbols(e.target.checked)}\n                inline\n                label=\"Symbols\"\n                type=\"checkbox\"\n                name=\"symbols\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicRange\">\n              <Form.Label>Password Length</Form.Label>\n              <Slider \n                value={range}\n                onChange={handleChange}\n                valueLabelDisplay=\"on\"\n                max={40}\n                aria-labelledby=\"continuous-slider\"\n              />\n            </Form.Group>\n\n            <button className=\"rounded-lg bg-warmblue-500 hover:bg-warmblue-700 py-2.5 px-4 text-white mb-3 float-right\">Generate</button>\n          </Form>\n        </Card>\n      </Container>\n    </>\n  );\n}\n\nfunction Example(props) {\n  const passwordRef = useRef(null);\n  const [copyStatus, setCopyStatus] = useState(\"\");\n\n  function copyToClipboard(event) {\n    try {\n      passwordRef.current.select();\n      document.execCommand(\"copy\");\n      event.target.focus();\n      setCopyStatus(\"Copied!\");\n    } catch (err) {\n      setCopyStatus(\"Something went wrong\");\n    }\n  }\n\n  return (\n    <>\n      <Modal show={props.show} onHide={props.handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Generated Password</Modal.Title>\n        </Modal.Header>\n        <Modal.Body > \n            <FormLabel>Your password is: </FormLabel>\n            <InputGroup className=\"mb-3\">\n                <FormControl\n                    value={props.password}\n                    ref={passwordRef}\n                    className=\"text-center\"\n                />\n                <InputGroup.Append>\n                <Button variant=\"outline-secondary\" onClick={copyToClipboard} ><FaClipboard /></Button>\n                </InputGroup.Append>\n            </InputGroup>\n\n\n        </Modal.Body>\n        {copyStatus && <Alert className=\"text-center\" variant={copyStatus === \"Copied!\" ? 'success' : 'danger'}  >{copyStatus}</Alert>}\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={ () => {props.handleClose(); setCopyStatus(\"\")}}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import Signup from \"./views/Signup\";\nimport { Container } from 'react-bootstrap'\nimport { AuthProvider } from './contexts/AuthContext'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Dashboard from './views/Dashboard'\nimport Login from './views/Login'\nimport PrivateRoute from './PrivateRoute'\nimport ForgotPassword from './views/ForgotPassword'\nimport NewPage from './views/NewPage'\nimport AddAccount from './views/AddAccount'\nimport Generate from \"./views/Generate\";\n\nfunction App() {\n  return (\n    \n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\n              <PrivateRoute exact path=\"/newpage\" component={NewPage} />\n              <PrivateRoute exact path=\"/add\" component={AddAccount} />\n              <PrivateRoute exact path=\"/generate\" component={Generate} />\n              <Container fluid className=\"d-flex align-items-center justify-content-center css-selector\" style={{minHeight: \"100vh\"}}>\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\n                  <Route path=\"/signup\" component={Signup}/>\n                  <Route path=\"/login\" component={Login}/>\n                  <Route path=\"/forgot-password\" component={ForgotPassword}/>\n                </div>\n              </Container>\n              \n            </Switch>\n          </AuthProvider>\n        </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}